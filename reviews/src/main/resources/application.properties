# HTTP Configuration
quarkus.http.port=8083
quarkus.http.host=0.0.0.0

# Database Configuration - Reviews PostgreSQL
# When running locally with ./gradlew quarkusDev, use localhost
# When running in Docker, use the container name
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=training
quarkus.datasource.password=training
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:6543/reviews

# Hibernate Configuration
# drop-and-create: Drops the schema and recreates it on every startup
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=no-file

# Application name
quarkus.application.name=reviews-service

# Consul Configuration
consul.host=localhost
consul.port=8500
consul.registration.enabled=true

# Redis Configuration
# When running locally with ./gradlew quarkusDev, use localhost
# When running in Docker, use the container name
quarkus.redis.hosts=redis://localhost:6379

# Cache Configuration
quarkus.cache.type=redis

# Hibernate Second-Level Cache
quarkus.hibernate-orm.cache."com.akfc.reviews.data.Review".expiration.max-idle=10M
quarkus.hibernate-orm.cache."com.akfc.reviews.data.Review".memory.object-count=1000

# RabbitMQ Configuration
# When running locally with ./gradlew quarkusDev, use localhost
# When running in Docker, use the container name
rabbitmq-host=localhost
rabbitmq-port=5672
rabbitmq-username=admin
rabbitmq-password=admin

# Disable messaging health checks until publishers/consumers are implemented
mp.messaging.health.enabled=false

# RabbitMQ Outgoing Channel - Review Events (Publish)
mp.messaging.outgoing.review-events.connector=smallrye-rabbitmq
mp.messaging.outgoing.review-events.exchange.name=library.reviews
mp.messaging.outgoing.review-events.exchange.type=topic
mp.messaging.outgoing.review-events.exchange.durable=true
mp.messaging.outgoing.review-events.routing-keys=review.created,review.updated,review.approved,review.rejected

# RabbitMQ Incoming Channel - Resource Events (Subscribe)
mp.messaging.incoming.resource-events.connector=smallrye-rabbitmq
mp.messaging.incoming.resource-events.queue.name=reviews.resources
mp.messaging.incoming.resource-events.queue.durable=true
mp.messaging.incoming.resource-events.exchange.name=library.resources
mp.messaging.incoming.resource-events.routing-keys=resource.created,resource.updated,resource.deleted

# RabbitMQ Incoming Channel - User Events (Subscribe)
mp.messaging.incoming.user-events.connector=smallrye-rabbitmq
mp.messaging.incoming.user-events.queue.name=reviews.users
mp.messaging.incoming.user-events.queue.durable=true
mp.messaging.incoming.user-events.exchange.name=library.users
mp.messaging.incoming.user-events.routing-keys=user.created,user.suspended,user.deleted
