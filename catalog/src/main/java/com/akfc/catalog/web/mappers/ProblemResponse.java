package com.akfc.catalog.web.mappers;

import com.fasterxml.jackson.annotation.JsonInclude;

import java.net.URI;

/**
 * RFC 7807 Problem Details for HTTP APIs.
 *
 * This class implements the standard "application/problem+json" format defined in RFC 7807.
 * It provides a machine-readable format for describing HTTP API errors.
 *
 * RFC 7807 defines five standard fields:
 * - type: A URI reference that identifies the problem type
 * - title: A short, human-readable summary of the problem type
 * - status: The HTTP status code
 * - detail: A human-readable explanation specific to this occurrence
 * - instance: A URI reference that identifies the specific occurrence
 *
 * Example Problem JSON (application/problem+json):
 * {
 *   "type": "https://api.example.com/problems/resource-not-found",
 *   "title": "Resource Not Found",
 *   "status": 404,
 *   "detail": "Resource with ID 999 could not be found in the catalog",
 *   "instance": "/resources/999"
 * }
 *
 * This provides better interoperability than custom error formats and is
 * becoming an industry standard for API error responses.
 *
 * See: https://datatracker.ietf.org/doc/html/rfc7807
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ProblemResponse {

    /**
     * A URI reference [RFC3986] that identifies the problem type.
     * This URI should provide human-readable documentation for the problem type.
     *
     * When dereferenced, it SHOULD provide human-readable documentation for the problem type.
     * Example: "https://api.example.com/problems/validation-error"
     */
    public String type;

    /**
     * A short, human-readable summary of the problem type.
     * It SHOULD NOT change from occurrence to occurrence of the problem, except for localization.
     *
     * Example: "Validation Error", "Resource Not Found"
     */
    public String title;

    /**
     * The HTTP status code generated by the origin server for this occurrence of the problem.
     *
     * Example: 400, 404, 409, 500
     */
    public Integer status;

    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * Unlike the title, this field's value can be different for each occurrence.
     *
     * Example: "The 'year' field must be between 1000 and 9999. You provided: 10000"
     */
    public String detail;

    /**
     * A URI reference that identifies the specific occurrence of the problem.
     * This is often the request URI that caused the problem.
     *
     * Example: "/resources/999", "/users/create"
     */
    public String instance;

    public ProblemResponse() {
    }

    public ProblemResponse(String type, String title, Integer status, String detail, String instance) {
        this.type = type;
        this.title = title;
        this.status = status;
        this.detail = detail;
        this.instance = instance;
    }

    /**
     * Create a Problem response for validation errors.
     */
    public static ProblemResponse validationError(String detail, String instance) {
        return new ProblemResponse(
            "https://problems.akfc.com/validation-error",
            "Validation Error",
            400,
            detail,
            instance
        );
    }

    /**
     * Create a Problem response for not found errors.
     */
    public static ProblemResponse notFound(String detail, String instance) {
        return new ProblemResponse(
            "https://problems.akfc.com/not-found",
            "Resource Not Found",
            404,
            detail,
            instance
        );
    }

    /**
     * Create a Problem response for conflict errors.
     */
    public static ProblemResponse conflict(String detail, String instance) {
        return new ProblemResponse(
            "https://problems.akfc.com/conflict",
            "Conflict",
            409,
            detail,
            instance
        );
    }

    /**
     * Create a Problem response for internal server errors.
     */
    public static ProblemResponse internalError(String detail, String instance) {
        return new ProblemResponse(
            "https://problems.akfc.com/internal-error",
            "Internal Server Error",
            500,
            detail,
            instance
        );
    }
}
