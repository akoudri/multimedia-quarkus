# ===================================
# Shared Configuration for All Services
# ===================================
# This file contains properties shared across all microservices.
# Service-specific properties should remain in individual application.properties files.

# HTTP Configuration - Shared Defaults
quarkus.http.host=0.0.0.0

# Database Configuration - PostgreSQL Defaults
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=training
quarkus.datasource.password=training

# Hibernate Configuration - Development Defaults
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=no-file

# Consul Configuration - Service Discovery
consul.host=localhost
consul.port=8500
consul.registration.enabled=true

# Redis Configuration - Distributed Caching
# When running locally with ./gradlew quarkusDev, use localhost
# When running in Docker, use the container name
quarkus.redis.hosts=redis://localhost:6379
quarkus.cache.type=redis

# RabbitMQ Configuration - Message Broker
# When running locally with ./gradlew quarkusDev, use localhost
# When running in Docker, use the container name
rabbitmq-host=localhost
rabbitmq-port=5672
rabbitmq-username=admin
rabbitmq-password=admin

# Disable messaging health checks until publishers/consumers are implemented
mp.messaging.health.enabled=false

# ===================================
# Observability Configuration - Shared
# ===================================

# OpenTelemetry - Distributed Tracing
quarkus.otel.enabled=true
quarkus.otel.exporter.otlp.endpoint=http://localhost:4317
quarkus.otel.exporter.otlp.protocol=grpc
quarkus.otel.traces.enabled=true
quarkus.otel.metrics.enabled=true
quarkus.otel.logs.enabled=false

# Trace sampling (1.0 = 100% of traces)
quarkus.otel.traces.sampler=always_on

# Resource attributes - Shared defaults
quarkus.otel.resource.attributes=environment=development,version=1.0.0-SNAPSHOT,tier=backend

# Instrument specific libraries
quarkus.otel.instrument.rest=true
quarkus.otel.instrument.messaging=true
quarkus.otel.instrument.grpc=false
quarkus.otel.instrument.jdbc=true

# Propagate trace context
quarkus.otel.propagators=tracecontext,baggage

# Micrometer Prometheus Metrics
quarkus.micrometer.enabled=true
quarkus.micrometer.registry-enabled-default=true
quarkus.micrometer.binder-enabled-default=true
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/q/metrics

# Enable specific metric binders
quarkus.micrometer.binder.http-server.enabled=true
quarkus.micrometer.binder.http-client.enabled=true
quarkus.micrometer.binder.jvm.enabled=true
quarkus.micrometer.binder.system.enabled=true
quarkus.micrometer.binder.mp-metrics.enabled=true

# Logging - Structured format with trace correlation
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p traceId=%X{traceId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{3.}] (%t) %s%e%n
